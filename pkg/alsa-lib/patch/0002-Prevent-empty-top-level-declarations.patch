From c98863254a954696ee168a7a607b2fd60a8680ea Mon Sep 17 00:00:00 2001
From: Michael Forney <mforney@mforney.org>
Date: Wed, 3 Jul 2019 18:15:11 -0700
Subject: [PATCH] Prevent empty top-level declarations

These macros may be defined as a function definition or defined
away. In both cases, the ';' after the macro invocation to be treated
as an empty top-level declaration, which is not allowed in ISO C.
---
 include/alsa-symbols.h     |  8 ++++----
 src/conf.c                 |  4 ++--
 src/confmisc.c             | 32 ++++++++++++++++----------------
 src/control/control.c      |  6 +++---
 src/control/control_hw.c   |  2 +-
 src/control/control_shm.c  |  2 +-
 src/dlmisc.c               |  4 ++--
 src/hwdep/hwdep_hw.c       |  2 +-
 src/names.c                |  4 ++--
 src/pcm/pcm.c              | 30 +++++++++++++++---------------
 src/pcm/pcm_adpcm.c        |  2 +-
 src/pcm/pcm_alaw.c         |  2 +-
 src/pcm/pcm_asym.c         |  2 +-
 src/pcm/pcm_copy.c         |  2 +-
 src/pcm/pcm_dmix.c         |  2 +-
 src/pcm/pcm_dshare.c       |  2 +-
 src/pcm/pcm_dsnoop.c       |  2 +-
 src/pcm/pcm_empty.c        |  2 +-
 src/pcm/pcm_file.c         |  2 +-
 src/pcm/pcm_hooks.c        |  4 ++--
 src/pcm/pcm_hw.c           |  2 +-
 src/pcm/pcm_iec958.c       |  2 +-
 src/pcm/pcm_ladspa.c       |  2 +-
 src/pcm/pcm_lfloat.c       |  2 +-
 src/pcm/pcm_linear.c       |  2 +-
 src/pcm/pcm_meter.c        |  2 +-
 src/pcm/pcm_mmap_emul.c    |  2 +-
 src/pcm/pcm_mulaw.c        |  2 +-
 src/pcm/pcm_multi.c        |  2 +-
 src/pcm/pcm_null.c         |  2 +-
 src/pcm/pcm_plug.c         |  2 +-
 src/pcm/pcm_rate.c         |  2 +-
 src/pcm/pcm_route.c        |  2 +-
 src/pcm/pcm_share.c        |  2 +-
 src/pcm/pcm_shm.c          |  2 +-
 src/pcm/pcm_softvol.c      |  2 +-
 src/rawmidi/rawmidi_hw.c   |  2 +-
 src/rawmidi/rawmidi_virt.c |  2 +-
 src/seq/seq_hw.c           |  2 +-
 src/timer/timer.c          | 10 +++++-----
 src/timer/timer_hw.c       |  2 +-
 src/timer/timer_query.c    |  6 +++---
 src/timer/timer_query_hw.c |  2 +-
 43 files changed, 87 insertions(+), 87 deletions(-)

diff --git a/include/alsa-symbols.h b/include/alsa-symbols.h
index 2298cb50..be37f143 100644
--- a/include/alsa-symbols.h
+++ b/include/alsa-symbols.h
@@ -36,9 +36,9 @@
 	extern __typeof (real) real __attribute__((symver (#name "@@" #version)))
 #else
 #define symbol_version(real, name, version) \
-	__asm__ (".symver " ASM_NAME(#real) "," ASM_NAME(#name) "@" #version)
+	__asm__ (".symver " ASM_NAME(#real) "," ASM_NAME(#name) "@" #version);
 #define default_symbol_version(real, name, version) \
-	__asm__ (".symver " ASM_NAME(#real) "," ASM_NAME(#name) "@@" #version)
+	__asm__ (".symver " ASM_NAME(#real) "," ASM_NAME(#name) "@@" #version);
 #endif
 
 #ifdef __clang__
@@ -57,11 +57,11 @@
 #if defined(__alpha__) || defined(__mips__)
 #define use_default_symbol_version(real, name, version) \
         __asm__ (".weak " ASM_NAME(#name)); \
-        __asm__ (ASM_NAME(#name) " = " ASM_NAME(#real))
+        __asm__ (ASM_NAME(#name) " = " ASM_NAME(#real));
 #else
 #define use_default_symbol_version(real, name, version) \
 	__asm__ (".weak " ASM_NAME(#name)); \
-	__asm__ (".set " ASM_NAME(#name) "," ASM_NAME(#real))
+	__asm__ (".set " ASM_NAME(#name) "," ASM_NAME(#real));
 #endif
 #endif
 
diff --git a/src/conf.c b/src/conf.c
index eca44c03..25ed58c0 100644
--- a/src/conf.c
+++ b/src/conf.c
@@ -4311,7 +4311,7 @@ int snd_config_hook_load(snd_config_t *root, snd_config_t *config, snd_config_t
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(snd_config_hook_load, SND_CONFIG_DLSYM_VERSION_HOOK);
+SND_DLSYM_BUILD_VERSION(snd_config_hook_load, SND_CONFIG_DLSYM_VERSION_HOOK)
 #endif
 
 #ifndef DOC_HIDDEN
@@ -4481,7 +4481,7 @@ __fin_err:
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(snd_config_hook_load_for_all_cards, SND_CONFIG_DLSYM_VERSION_HOOK);
+SND_DLSYM_BUILD_VERSION(snd_config_hook_load_for_all_cards, SND_CONFIG_DLSYM_VERSION_HOOK)
 #endif
 
 /** 
diff --git a/src/confmisc.c b/src/confmisc.c
index 9b30d6c1..a819593d 100644
--- a/src/confmisc.c
+++ b/src/confmisc.c
@@ -330,7 +330,7 @@ int snd_func_getenv(snd_config_t **dst, snd_config_t *root, snd_config_t *src,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(snd_func_getenv, SND_CONFIG_DLSYM_VERSION_EVALUATE);
+SND_DLSYM_BUILD_VERSION(snd_func_getenv, SND_CONFIG_DLSYM_VERSION_EVALUATE)
 #endif
 
 /**
@@ -383,7 +383,7 @@ int snd_func_igetenv(snd_config_t **dst, snd_config_t *root, snd_config_t *src,
 	return 0;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(snd_func_igetenv, SND_CONFIG_DLSYM_VERSION_EVALUATE);
+SND_DLSYM_BUILD_VERSION(snd_func_igetenv, SND_CONFIG_DLSYM_VERSION_EVALUATE)
 #endif
 		
 /**
@@ -474,7 +474,7 @@ int snd_func_concat(snd_config_t **dst, snd_config_t *root, snd_config_t *src,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(snd_func_concat, SND_CONFIG_DLSYM_VERSION_EVALUATE);
+SND_DLSYM_BUILD_VERSION(snd_func_concat, SND_CONFIG_DLSYM_VERSION_EVALUATE)
 #endif
 
 
@@ -563,7 +563,7 @@ int snd_func_iadd(snd_config_t **dst, snd_config_t *root,
 	return snd_func_iops(dst, root, src, private_data, 0);
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(snd_func_iadd, SND_CONFIG_DLSYM_VERSION_EVALUATE);
+SND_DLSYM_BUILD_VERSION(snd_func_iadd, SND_CONFIG_DLSYM_VERSION_EVALUATE)
 #endif
 
 /**
@@ -589,7 +589,7 @@ int snd_func_imul(snd_config_t **dst, snd_config_t *root,
 	return snd_func_iops(dst, root, src, private_data, 1);
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(snd_func_imul, SND_CONFIG_DLSYM_VERSION_EVALUATE);
+SND_DLSYM_BUILD_VERSION(snd_func_imul, SND_CONFIG_DLSYM_VERSION_EVALUATE)
 #endif
 
 /**
@@ -620,7 +620,7 @@ int snd_func_datadir(snd_config_t **dst, snd_config_t *root ATTRIBUTE_UNUSED,
 	return snd_config_imake_string(dst, id, snd_config_topdir());
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(snd_func_datadir, SND_CONFIG_DLSYM_VERSION_EVALUATE);
+SND_DLSYM_BUILD_VERSION(snd_func_datadir, SND_CONFIG_DLSYM_VERSION_EVALUATE)
 #endif
 
 static int open_ctl(long card, snd_ctl_t **ctl)
@@ -704,7 +704,7 @@ int snd_func_private_string(snd_config_t **dst, snd_config_t *root ATTRIBUTE_UNU
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(snd_func_private_string, SND_CONFIG_DLSYM_VERSION_EVALUATE);
+SND_DLSYM_BUILD_VERSION(snd_func_private_string, SND_CONFIG_DLSYM_VERSION_EVALUATE)
 #endif
 
 /**
@@ -825,7 +825,7 @@ int snd_func_private_card_driver(snd_config_t **dst, snd_config_t *root ATTRIBUT
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(snd_func_private_card_driver, SND_CONFIG_DLSYM_VERSION_EVALUATE);
+SND_DLSYM_BUILD_VERSION(snd_func_private_card_driver, SND_CONFIG_DLSYM_VERSION_EVALUATE)
 #endif
 
 static int parse_card(snd_config_t *root, snd_config_t *src,
@@ -889,7 +889,7 @@ int snd_func_card_inum(snd_config_t **dst, snd_config_t *root, snd_config_t *src
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(snd_func_card_inum, SND_CONFIG_DLSYM_VERSION_EVALUATE);
+SND_DLSYM_BUILD_VERSION(snd_func_card_inum, SND_CONFIG_DLSYM_VERSION_EVALUATE)
 #endif
 
 /**
@@ -926,7 +926,7 @@ int snd_func_card_driver(snd_config_t **dst, snd_config_t *root, snd_config_t *s
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(snd_func_card_driver, SND_CONFIG_DLSYM_VERSION_EVALUATE);
+SND_DLSYM_BUILD_VERSION(snd_func_card_driver, SND_CONFIG_DLSYM_VERSION_EVALUATE)
 #endif
 
 /**
@@ -977,7 +977,7 @@ int snd_func_card_id(snd_config_t **dst, snd_config_t *root, snd_config_t *src,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(snd_func_card_id, SND_CONFIG_DLSYM_VERSION_EVALUATE);
+SND_DLSYM_BUILD_VERSION(snd_func_card_id, SND_CONFIG_DLSYM_VERSION_EVALUATE)
 #endif
 
 /**
@@ -1028,7 +1028,7 @@ int snd_func_card_name(snd_config_t **dst, snd_config_t *root,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(snd_func_card_name, SND_CONFIG_DLSYM_VERSION_EVALUATE);
+SND_DLSYM_BUILD_VERSION(snd_func_card_name, SND_CONFIG_DLSYM_VERSION_EVALUATE)
 #endif
 
 #ifdef DOXYGEN
@@ -1122,7 +1122,7 @@ int snd_func_pcm_id(snd_config_t **dst, snd_config_t *root, snd_config_t *src, v
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(snd_func_pcm_id, SND_CONFIG_DLSYM_VERSION_EVALUATE);
+SND_DLSYM_BUILD_VERSION(snd_func_pcm_id, SND_CONFIG_DLSYM_VERSION_EVALUATE)
 #endif
 
 /**
@@ -1235,7 +1235,7 @@ int snd_func_pcm_args_by_class(snd_config_t **dst, snd_config_t *root, snd_confi
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(snd_func_pcm_args_by_class, SND_CONFIG_DLSYM_VERSION_EVALUATE);
+SND_DLSYM_BUILD_VERSION(snd_func_pcm_args_by_class, SND_CONFIG_DLSYM_VERSION_EVALUATE)
 #endif
 
 /**
@@ -1289,7 +1289,7 @@ int snd_func_private_pcm_subdevice(snd_config_t **dst, snd_config_t *root ATTRIB
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(snd_func_private_pcm_subdevice, SND_CONFIG_DLSYM_VERSION_EVALUATE);
+SND_DLSYM_BUILD_VERSION(snd_func_private_pcm_subdevice, SND_CONFIG_DLSYM_VERSION_EVALUATE)
 #endif
 
 #endif /* BUILD_PCM */
@@ -1391,7 +1391,7 @@ int snd_func_refer(snd_config_t **dst, snd_config_t *root, snd_config_t *src,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(snd_func_refer, SND_CONFIG_DLSYM_VERSION_EVALUATE);
+SND_DLSYM_BUILD_VERSION(snd_func_refer, SND_CONFIG_DLSYM_VERSION_EVALUATE)
 #endif
 
 #ifndef DOC_HIDDEN
diff --git a/src/control/control.c b/src/control/control.c
index d77ab24c..4c2ae7f5 100644
--- a/src/control/control.c
+++ b/src/control/control.c
@@ -2738,7 +2738,7 @@ int snd_ctl_elem_info_is_indirect(const snd_ctl_elem_info_t *obj)
 	assert(obj);
 	return 0;
 }
-link_warning(snd_ctl_elem_info_is_indirect, "Warning: snd_ctl_elem_info_is_indirect is deprecated, do not use it");
+link_warning(snd_ctl_elem_info_is_indirect, "Warning: snd_ctl_elem_info_is_indirect is deprecated, do not use it")
 
 /**
  * \brief Get owner of a locked element
@@ -2895,7 +2895,7 @@ int snd_ctl_elem_info_get_dimensions(const snd_ctl_elem_info_t *obj)
 	return -EINVAL;
 #endif
 }
-use_default_symbol_version(__snd_ctl_elem_info_get_dimensions, snd_ctl_elem_info_get_dimensions, ALSA_0.9.3);
+use_default_symbol_version(__snd_ctl_elem_info_get_dimensions, snd_ctl_elem_info_get_dimensions, ALSA_0.9.3)
 
 /**
  * \brief Get specified of dimension width for given element
@@ -2921,7 +2921,7 @@ int snd_ctl_elem_info_get_dimension(const snd_ctl_elem_info_t *obj, unsigned int
 	return -EINVAL;
 #endif /* deprecated */
 }
-use_default_symbol_version(__snd_ctl_elem_info_get_dimension, snd_ctl_elem_info_get_dimension, ALSA_0.9.3);
+use_default_symbol_version(__snd_ctl_elem_info_get_dimension, snd_ctl_elem_info_get_dimension, ALSA_0.9.3)
 
 /**
  * \brief Set width to a specified dimension level of given element information.
diff --git a/src/control/control_hw.c b/src/control/control_hw.c
index a353767d..beba09bf 100644
--- a/src/control/control_hw.c
+++ b/src/control/control_hw.c
@@ -547,5 +547,5 @@ int _snd_ctl_hw_open(snd_ctl_t **handlep, char *name, snd_config_t *root ATTRIBU
 	return snd_ctl_hw_open(handlep, name, card, mode);
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_ctl_hw_open, SND_CONTROL_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_ctl_hw_open, SND_CONTROL_DLSYM_VERSION)
 #endif
diff --git a/src/control/control_shm.c b/src/control/control_shm.c
index 3d1555ee..135dd805 100644
--- a/src/control/control_shm.c
+++ b/src/control/control_shm.c
@@ -619,4 +619,4 @@ int _snd_ctl_shm_open(snd_ctl_t **handlep, char *name, snd_config_t *root, snd_c
 	snd_config_delete(sconfig);
 	return err;
 }
-SND_DLSYM_BUILD_VERSION(_snd_ctl_shm_open, SND_CONTROL_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_ctl_shm_open, SND_CONTROL_DLSYM_VERSION)
diff --git a/src/dlmisc.c b/src/dlmisc.c
index d7aff456..96784197 100644
--- a/src/dlmisc.c
+++ b/src/dlmisc.c
@@ -171,8 +171,8 @@ EXPORT_SYMBOL void *INTERNAL(snd_dlopen_old)(const char *name, int mode)
 #endif
 
 #ifndef DOC_HIDDEN
-use_symbol_version(__snd_dlopen_old, snd_dlopen, ALSA_0.9);
-use_default_symbol_version(__snd_dlopen, snd_dlopen, ALSA_1.1.6);
+use_symbol_version(__snd_dlopen_old, snd_dlopen, ALSA_0.9)
+use_default_symbol_version(__snd_dlopen, snd_dlopen, ALSA_1.1.6)
 #endif /* DOC_HIDDEN */
 
 /**
diff --git a/src/hwdep/hwdep_hw.c b/src/hwdep/hwdep_hw.c
index 0f28f23b..195c6107 100644
--- a/src/hwdep/hwdep_hw.c
+++ b/src/hwdep/hwdep_hw.c
@@ -179,4 +179,4 @@ int _snd_hwdep_hw_open(snd_hwdep_t **hwdep, char *name,
 		return -EINVAL;
 	return snd_hwdep_hw_open(hwdep, name, card, device, mode);
 }
-SND_DLSYM_BUILD_VERSION(_snd_hwdep_hw_open, SND_HWDEP_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_hwdep_hw_open, SND_HWDEP_DLSYM_VERSION)
diff --git a/src/names.c b/src/names.c
index 922ef781..8e2f029f 100644
--- a/src/names.c
+++ b/src/names.c
@@ -44,7 +44,7 @@ int snd_names_list(const char *iface ATTRIBUTE_UNUSED,
 {
 	return -ENXIO;
 }
-link_warning(snd_names_list, "Warning: snd_names_list is deprecated, use snd_device_name_hint");
+link_warning(snd_names_list, "Warning: snd_names_list is deprecated, use snd_device_name_hint")
 
 /**
  * \brief This function is unimplemented.
@@ -53,4 +53,4 @@ link_warning(snd_names_list, "Warning: snd_names_list is deprecated, use snd_dev
 void snd_names_list_free(snd_devname_t *list ATTRIBUTE_UNUSED)
 {
 }
-link_warning(snd_names_list_free, "Warning: snd_names_list_free is deprecated, use snd_device_name_free_hint");
+link_warning(snd_names_list_free, "Warning: snd_names_list_free is deprecated, use snd_device_name_free_hint")
diff --git a/src/pcm/pcm.c b/src/pcm/pcm.c
index ab3bbda7..18b1246e 100644
--- a/src/pcm/pcm.c
+++ b/src/pcm/pcm.c
@@ -1544,7 +1544,7 @@ snd_pcm_sframes_t snd_pcm_forward(snd_pcm_t *pcm, snd_pcm_uframes_t frames)
 	snd_pcm_unlock(pcm->fast_op_arg);
 	return result;
 }
-use_default_symbol_version(__snd_pcm_forward, snd_pcm_forward, ALSA_0.9.0rc8);
+use_default_symbol_version(__snd_pcm_forward, snd_pcm_forward, ALSA_0.9.0rc8)
 
 /**
  * \brief Write interleaved frames to a PCM
@@ -2256,7 +2256,7 @@ const char *snd_pcm_start_mode_name(snd_pcm_start_t mode)
 }
 
 #ifndef DOC_HIDDEN
-link_warning(snd_pcm_start_mode_name, "Warning: start_mode is deprecated, consider to use start_threshold");
+link_warning(snd_pcm_start_mode_name, "Warning: start_mode is deprecated, consider to use start_threshold")
 #endif
 
 /**
@@ -2272,7 +2272,7 @@ const char *snd_pcm_xrun_mode_name(snd_pcm_xrun_t mode)
 }
 
 #ifndef DOC_HIDDEN
-link_warning(snd_pcm_xrun_mode_name, "Warning: xrun_mode is deprecated, consider to use stop_threshold");
+link_warning(snd_pcm_xrun_mode_name, "Warning: xrun_mode is deprecated, consider to use stop_threshold")
 #endif
 
 /**
@@ -2326,7 +2326,7 @@ const char *snd_pcm_type_name(snd_pcm_type_t type)
 		return NULL;
 	return snd_pcm_type_names[type];
 }
-use_default_symbol_version(__snd_pcm_type_name, snd_pcm_type_name, ALSA_0.9.0);
+use_default_symbol_version(__snd_pcm_type_name, snd_pcm_type_name, ALSA_0.9.0)
 
 /**
  * \brief Dump current hardware setup for PCM
@@ -6466,7 +6466,7 @@ int snd_pcm_sw_params_set_start_mode(snd_pcm_t *pcm, snd_pcm_sw_params_t *params
 }
 
 #ifndef DOC_HIDDEN
-link_warning(snd_pcm_sw_params_set_start_mode, "Warning: start_mode is deprecated, consider to use start_threshold");
+link_warning(snd_pcm_sw_params_set_start_mode, "Warning: start_mode is deprecated, consider to use start_threshold")
 #endif
 
 /**
@@ -6482,7 +6482,7 @@ snd_pcm_start_t snd_pcm_sw_params_get_start_mode(const snd_pcm_sw_params_t *para
 }
 
 #ifndef DOC_HIDDEN
-link_warning(snd_pcm_sw_params_get_start_mode, "Warning: start_mode is deprecated, consider to use start_threshold");
+link_warning(snd_pcm_sw_params_get_start_mode, "Warning: start_mode is deprecated, consider to use start_threshold")
 #endif
 
 /**
@@ -6514,7 +6514,7 @@ int snd_pcm_sw_params_set_xrun_mode(snd_pcm_t *pcm, snd_pcm_sw_params_t *params,
 }
 
 #ifndef DOC_HIDDEN
-link_warning(snd_pcm_sw_params_set_xrun_mode, "Warning: xrun_mode is deprecated, consider to use stop_threshold");
+link_warning(snd_pcm_sw_params_set_xrun_mode, "Warning: xrun_mode is deprecated, consider to use stop_threshold")
 #endif
 
 /**
@@ -6530,7 +6530,7 @@ snd_pcm_xrun_t snd_pcm_sw_params_get_xrun_mode(const snd_pcm_sw_params_t *params
 }
 
 #ifndef DOC_HIDDEN
-link_warning(snd_pcm_sw_params_get_xrun_mode, "Warning: xrun_mode is deprecated, consider to use stop_threshold");
+link_warning(snd_pcm_sw_params_get_xrun_mode, "Warning: xrun_mode is deprecated, consider to use stop_threshold")
 #endif
 
 /**
@@ -7030,7 +7030,7 @@ void snd_pcm_status_get_trigger_htstamp(const snd_pcm_status_t *obj, snd_htimest
 	assert(obj && ptr);
 	*ptr = obj->trigger_tstamp;
 }
-use_default_symbol_version(__snd_pcm_status_get_trigger_htstamp, snd_pcm_status_get_trigger_htstamp, ALSA_0.9.0rc8);
+use_default_symbol_version(__snd_pcm_status_get_trigger_htstamp, snd_pcm_status_get_trigger_htstamp, ALSA_0.9.0rc8)
 
 /** 
  * \brief Get "now" timestamp from a PCM status container
@@ -7058,7 +7058,7 @@ void snd_pcm_status_get_htstamp(const snd_pcm_status_t *obj, snd_htimestamp_t *p
 	assert(obj && ptr);
 	*ptr = obj->tstamp;
 }
-use_default_symbol_version(__snd_pcm_status_get_htstamp, snd_pcm_status_get_htstamp, ALSA_0.9.0rc8);
+use_default_symbol_version(__snd_pcm_status_get_htstamp, snd_pcm_status_get_htstamp, ALSA_0.9.0rc8)
 
 /** 
  * \brief Get "now" hi-res audio timestamp from a PCM status container
@@ -7752,8 +7752,8 @@ snd_pcm_uframes_t _snd_pcm_boundary(snd_pcm_t *pcm)
 }
 
 #ifndef DOC_HIDDEN
-link_warning(_snd_pcm_mmap_hw_ptr, "Warning: _snd_pcm_mmap_hw_ptr() is deprecated, consider to not use this function");
-link_warning(_snd_pcm_boundary, "Warning: _snd_pcm_boundary() is deprecated, consider to use snd_pcm_sw_params_current()");
+link_warning(_snd_pcm_mmap_hw_ptr, "Warning: _snd_pcm_mmap_hw_ptr() is deprecated, consider to not use this function")
+link_warning(_snd_pcm_boundary, "Warning: _snd_pcm_boundary() is deprecated, consider to use snd_pcm_sw_params_current()")
 #endif
 
 static const char *const names[SND_PCM_HW_PARAM_LAST_INTERVAL + 1] = {
@@ -8018,13 +8018,13 @@ void snd_pcm_unlink_appl_ptr(snd_pcm_t *pcm, snd_pcm_t *slave)
 #ifdef USE_VERSIONED_SYMBOLS
 
 #define OBSOLETE1(name, what, new) \
-  default_symbol_version(__##name, name, new); \
-  symbol_version(__old_##name, name, what);
+  default_symbol_version(__##name, name, new) \
+  symbol_version(__old_##name, name, what)
 
 #else
 
 #define OBSOLETE1(name, what, new) \
-  use_default_symbol_version(__##name, name, new);
+  use_default_symbol_version(__##name, name, new)
 
 #endif /* USE_VERSIONED_SYMBOLS */
 
diff --git a/src/pcm/pcm_adpcm.c b/src/pcm/pcm_adpcm.c
index efd41451..fd9b9e8e 100644
--- a/src/pcm/pcm_adpcm.c
+++ b/src/pcm/pcm_adpcm.c
@@ -677,5 +677,5 @@ int _snd_pcm_adpcm_open(snd_pcm_t **pcmp, const char *name,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_adpcm_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_adpcm_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_alaw.c b/src/pcm/pcm_alaw.c
index 715b04c7..0a889183 100644
--- a/src/pcm/pcm_alaw.c
+++ b/src/pcm/pcm_alaw.c
@@ -552,5 +552,5 @@ int _snd_pcm_alaw_open(snd_pcm_t **pcmp, const char *name,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_alaw_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_alaw_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_asym.c b/src/pcm/pcm_asym.c
index 9c32b1b9..740a85fe 100644
--- a/src/pcm/pcm_asym.c
+++ b/src/pcm/pcm_asym.c
@@ -115,5 +115,5 @@ int _snd_pcm_asym_open(snd_pcm_t **pcmp, const char *name ATTRIBUTE_UNUSED,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_asym_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_asym_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_copy.c b/src/pcm/pcm_copy.c
index 1bf745d2..461bc36e 100644
--- a/src/pcm/pcm_copy.c
+++ b/src/pcm/pcm_copy.c
@@ -298,5 +298,5 @@ int _snd_pcm_copy_open(snd_pcm_t **pcmp, const char *name,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_copy_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_copy_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_dmix.c b/src/pcm/pcm_dmix.c
index 55cae3e7..46d4f53e 100644
--- a/src/pcm/pcm_dmix.c
+++ b/src/pcm/pcm_dmix.c
@@ -1339,5 +1339,5 @@ int _snd_pcm_dmix_open(snd_pcm_t **pcmp, const char *name,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_dmix_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_dmix_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_dshare.c b/src/pcm/pcm_dshare.c
index c0329098..e2986d46 100644
--- a/src/pcm/pcm_dshare.c
+++ b/src/pcm/pcm_dshare.c
@@ -968,5 +968,5 @@ int _snd_pcm_dshare_open(snd_pcm_t **pcmp, const char *name,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_dshare_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_dshare_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_dsnoop.c b/src/pcm/pcm_dsnoop.c
index bf67c68a..6eb6f66b 100644
--- a/src/pcm/pcm_dsnoop.c
+++ b/src/pcm/pcm_dsnoop.c
@@ -820,5 +820,5 @@ int _snd_pcm_dsnoop_open(snd_pcm_t **pcmp, const char *name,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_dsnoop_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_dsnoop_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_empty.c b/src/pcm/pcm_empty.c
index 7cbd349f..c53b922b 100644
--- a/src/pcm/pcm_empty.c
+++ b/src/pcm/pcm_empty.c
@@ -111,5 +111,5 @@ int _snd_pcm_empty_open(snd_pcm_t **pcmp, const char *name ATTRIBUTE_UNUSED,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_empty_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_empty_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_file.c b/src/pcm/pcm_file.c
index 90b3f3f5..cd4c9b05 100644
--- a/src/pcm/pcm_file.c
+++ b/src/pcm/pcm_file.c
@@ -1140,5 +1140,5 @@ int _snd_pcm_file_open(snd_pcm_t **pcmp, const char *name,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_file_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_file_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_hooks.c b/src/pcm/pcm_hooks.c
index 4416d363..ed88dd29 100644
--- a/src/pcm/pcm_hooks.c
+++ b/src/pcm/pcm_hooks.c
@@ -549,7 +549,7 @@ int _snd_pcm_hooks_open(snd_pcm_t **pcmp, const char *name,
 	return 0;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_hooks_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_hooks_open, SND_PCM_DLSYM_VERSION)
 #endif
 
 /**
@@ -724,5 +724,5 @@ int _snd_pcm_hook_ctl_elems_install(snd_pcm_t *pcm, snd_config_t *conf)
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_hook_ctl_elems_install, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_hook_ctl_elems_install, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_hw.c b/src/pcm/pcm_hw.c
index bd3ecfc9..6e2fd971 100644
--- a/src/pcm/pcm_hw.c
+++ b/src/pcm/pcm_hw.c
@@ -2070,7 +2070,7 @@ fail:
 }
 
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_hw_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_hw_open, SND_PCM_DLSYM_VERSION)
 #endif
 
 /*
diff --git a/src/pcm/pcm_iec958.c b/src/pcm/pcm_iec958.c
index 7b8459fb..1afe7393 100644
--- a/src/pcm/pcm_iec958.c
+++ b/src/pcm/pcm_iec958.c
@@ -813,5 +813,5 @@ int _snd_pcm_iec958_open(snd_pcm_t **pcmp, const char *name,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_iec958_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_iec958_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_ladspa.c b/src/pcm/pcm_ladspa.c
index 56ee138f..3ea7f70b 100644
--- a/src/pcm/pcm_ladspa.c
+++ b/src/pcm/pcm_ladspa.c
@@ -1804,5 +1804,5 @@ int _snd_pcm_ladspa_open(snd_pcm_t **pcmp, const char *name,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_ladspa_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_ladspa_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_lfloat.c b/src/pcm/pcm_lfloat.c
index d9aa136d..7785e4b9 100644
--- a/src/pcm/pcm_lfloat.c
+++ b/src/pcm/pcm_lfloat.c
@@ -510,7 +510,7 @@ int _snd_pcm_lfloat_open(snd_pcm_t **pcmp, const char *name,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_lfloat_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_lfloat_open, SND_PCM_DLSYM_VERSION)
 #endif
 
 #else /* BUGGY_GCC */
diff --git a/src/pcm/pcm_linear.c b/src/pcm/pcm_linear.c
index 81edccaa..c95d1b95 100644
--- a/src/pcm/pcm_linear.c
+++ b/src/pcm/pcm_linear.c
@@ -552,5 +552,5 @@ int _snd_pcm_linear_open(snd_pcm_t **pcmp, const char *name,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_linear_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_linear_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_meter.c b/src/pcm/pcm_meter.c
index 68c369de..947ef0f1 100644
--- a/src/pcm/pcm_meter.c
+++ b/src/pcm/pcm_meter.c
@@ -835,7 +835,7 @@ int _snd_pcm_meter_open(snd_pcm_t **pcmp, const char *name,
 	}
 	return 0;
 }
-SND_DLSYM_BUILD_VERSION(_snd_pcm_meter_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_meter_open, SND_PCM_DLSYM_VERSION)
 
 #endif
 
diff --git a/src/pcm/pcm_mmap_emul.c b/src/pcm/pcm_mmap_emul.c
index 009cebb3..0011ccf4 100644
--- a/src/pcm/pcm_mmap_emul.c
+++ b/src/pcm/pcm_mmap_emul.c
@@ -510,5 +510,5 @@ int _snd_pcm_mmap_emul_open(snd_pcm_t **pcmp, const char *name,
 }
 
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_mmap_emul_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_mmap_emul_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_mulaw.c b/src/pcm/pcm_mulaw.c
index 177a61bb..587fa54e 100644
--- a/src/pcm/pcm_mulaw.c
+++ b/src/pcm/pcm_mulaw.c
@@ -565,5 +565,5 @@ int _snd_pcm_mulaw_open(snd_pcm_t **pcmp, const char *name,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_mulaw_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_mulaw_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_multi.c b/src/pcm/pcm_multi.c
index 74e1e3f1..7320f46f 100644
--- a/src/pcm/pcm_multi.c
+++ b/src/pcm/pcm_multi.c
@@ -1458,5 +1458,5 @@ _free:
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_multi_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_multi_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_null.c b/src/pcm/pcm_null.c
index f7b096bc..ad72d067 100644
--- a/src/pcm/pcm_null.c
+++ b/src/pcm/pcm_null.c
@@ -501,5 +501,5 @@ int _snd_pcm_null_open(snd_pcm_t **pcmp, const char *name,
 	return 0;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_null_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_null_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_plug.c b/src/pcm/pcm_plug.c
index e5a3a189..86a29920 100644
--- a/src/pcm/pcm_plug.c
+++ b/src/pcm/pcm_plug.c
@@ -1344,5 +1344,5 @@ int _snd_pcm_plug_open(snd_pcm_t **pcmp, const char *name,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_plug_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_plug_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_rate.c b/src/pcm/pcm_rate.c
index ef6b8006..5f0cc774 100644
--- a/src/pcm/pcm_rate.c
+++ b/src/pcm/pcm_rate.c
@@ -1728,5 +1728,5 @@ int _snd_pcm_rate_open(snd_pcm_t **pcmp, const char *name,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_rate_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_rate_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_route.c b/src/pcm/pcm_route.c
index affb929f..737c8fa4 100644
--- a/src/pcm/pcm_route.c
+++ b/src/pcm/pcm_route.c
@@ -1430,5 +1430,5 @@ int _snd_pcm_route_open(snd_pcm_t **pcmp, const char *name,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_route_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_route_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_share.c b/src/pcm/pcm_share.c
index 0699fc87..ca0a6690 100644
--- a/src/pcm/pcm_share.c
+++ b/src/pcm/pcm_share.c
@@ -1730,5 +1730,5 @@ _free:
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_share_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_share_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_shm.c b/src/pcm/pcm_shm.c
index d9596547..2804cc67 100644
--- a/src/pcm/pcm_shm.c
+++ b/src/pcm/pcm_shm.c
@@ -904,5 +904,5 @@ int _snd_pcm_shm_open(snd_pcm_t **pcmp, const char *name,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_shm_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_shm_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/pcm/pcm_softvol.c b/src/pcm/pcm_softvol.c
index 38c63679..3eaeceda 100644
--- a/src/pcm/pcm_softvol.c
+++ b/src/pcm/pcm_softvol.c
@@ -1269,5 +1269,5 @@ int _snd_pcm_softvol_open(snd_pcm_t **pcmp, const char *name,
 	return err;
 }
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_pcm_softvol_open, SND_PCM_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_pcm_softvol_open, SND_PCM_DLSYM_VERSION)
 #endif
diff --git a/src/rawmidi/rawmidi_hw.c b/src/rawmidi/rawmidi_hw.c
index 3b1d941e..83f1090f 100644
--- a/src/rawmidi/rawmidi_hw.c
+++ b/src/rawmidi/rawmidi_hw.c
@@ -511,4 +511,4 @@ int _snd_rawmidi_hw_open(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp,
 		return -EINVAL;
 	return snd_rawmidi_hw_open(inputp, outputp, name, card, device, subdevice, mode);
 }
-SND_DLSYM_BUILD_VERSION(_snd_rawmidi_hw_open, SND_RAWMIDI_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_rawmidi_hw_open, SND_RAWMIDI_DLSYM_VERSION)
diff --git a/src/rawmidi/rawmidi_virt.c b/src/rawmidi/rawmidi_virt.c
index 04c485d3..5bae8ea0 100644
--- a/src/rawmidi/rawmidi_virt.c
+++ b/src/rawmidi/rawmidi_virt.c
@@ -466,5 +466,5 @@ int _snd_rawmidi_virtual_open(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp,
 }
 
 #ifndef DOC_HIDDEN
-SND_DLSYM_BUILD_VERSION(_snd_rawmidi_virtual_open, SND_RAWMIDI_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_rawmidi_virtual_open, SND_RAWMIDI_DLSYM_VERSION)
 #endif
diff --git a/src/seq/seq_hw.c b/src/seq/seq_hw.c
index eeaf26e1..d3229d72 100644
--- a/src/seq/seq_hw.c
+++ b/src/seq/seq_hw.c
@@ -630,4 +630,4 @@ int _snd_seq_hw_open(snd_seq_t **handlep, char *name,
 	}
 	return snd_seq_hw_open(handlep, name, streams, mode);
 }
-SND_DLSYM_BUILD_VERSION(_snd_seq_hw_open, SND_SEQ_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_seq_hw_open, SND_SEQ_DLSYM_VERSION)
diff --git a/src/timer/timer.c b/src/timer/timer.c
index 0f8491b8..a139356b 100644
--- a/src/timer/timer.c
+++ b/src/timer/timer.c
@@ -649,7 +649,7 @@ int snd_timer_params_set_exclusive(snd_timer_params_t * params, int exclusive)
 		params->flags &= ~SNDRV_TIMER_PSFLG_EXCLUSIVE;
 	return 0;
 }
-use_default_symbol_version(__snd_timer_params_set_exclusive, snd_timer_params_set_exclusive, ALSA_0.9.0);
+use_default_symbol_version(__snd_timer_params_set_exclusive, snd_timer_params_set_exclusive, ALSA_0.9.0)
 
 /**
  * \brief determine if timer has exclusive flag
@@ -665,7 +665,7 @@ int snd_timer_params_get_exclusive(snd_timer_params_t * params)
 	assert(params);
 	return params->flags & SNDRV_TIMER_PSFLG_EXCLUSIVE ? 1 : 0;
 }
-use_default_symbol_version(__snd_timer_params_get_exclusive, snd_timer_params_get_exclusive, ALSA_0.9.0);
+use_default_symbol_version(__snd_timer_params_get_exclusive, snd_timer_params_get_exclusive, ALSA_0.9.0)
 
 /**
  * \brief set timer early event
@@ -751,7 +751,7 @@ void snd_timer_params_set_filter(snd_timer_params_t * params, unsigned int filte
 	assert(params);
 	params->filter = filter;
 }
-use_default_symbol_version(__snd_timer_params_set_filter, snd_timer_params_set_filter, ALSA_0.9.0);
+use_default_symbol_version(__snd_timer_params_set_filter, snd_timer_params_set_filter, ALSA_0.9.0)
 
 /**
  * \brief get timer event filter
@@ -767,7 +767,7 @@ unsigned int snd_timer_params_get_filter(snd_timer_params_t * params)
 	assert(params);
 	return params->filter;
 }
-use_default_symbol_version(__snd_timer_params_get_filter, snd_timer_params_get_filter, ALSA_0.9.0);
+use_default_symbol_version(__snd_timer_params_get_filter, snd_timer_params_get_filter, ALSA_0.9.0)
 
 /**
  * \brief set parameters for timer handle
@@ -960,5 +960,5 @@ long snd_timer_info_get_ticks(snd_timer_info_t * info)
 	return 1;
 }
 #ifndef DOC_HIDDEN
-link_warning(snd_timer_info_get_ticks, "Warning: snd_timer_info_get_ticks is deprecated");
+link_warning(snd_timer_info_get_ticks, "Warning: snd_timer_info_get_ticks is deprecated")
 #endif
diff --git a/src/timer/timer_hw.c b/src/timer/timer_hw.c
index fe4e40bb..884e6139 100644
--- a/src/timer/timer_hw.c
+++ b/src/timer/timer_hw.c
@@ -332,4 +332,4 @@ int _snd_timer_hw_open(snd_timer_t **timer, char *name,
 	}
 	return snd_timer_hw_open(timer, name, dev_class, dev_sclass, card, device, subdevice, mode);
 }
-SND_DLSYM_BUILD_VERSION(_snd_timer_hw_open, SND_TIMER_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_timer_hw_open, SND_TIMER_DLSYM_VERSION)
diff --git a/src/timer/timer_query.c b/src/timer/timer_query.c
index 084ff61a..83543522 100644
--- a/src/timer/timer_query.c
+++ b/src/timer/timer_query.c
@@ -393,7 +393,7 @@ int snd_timer_query_info(snd_timer_query_t *timer, snd_timer_ginfo_t *info)
   	assert(info);
 	return timer->ops->info(timer, info);
 }
-use_default_symbol_version(__snd_timer_query_info, snd_timer_query_info, ALSA_0.9.0);
+use_default_symbol_version(__snd_timer_query_info, snd_timer_query_info, ALSA_0.9.0)
 
 /**
  * \brief set the timer global parameters
@@ -411,7 +411,7 @@ int snd_timer_query_params(snd_timer_query_t *timer, snd_timer_gparams_t *params
   	assert(params);
 	return timer->ops->params(timer, params);
 }
-use_default_symbol_version(__snd_timer_query_params, snd_timer_query_params, ALSA_0.9.0);
+use_default_symbol_version(__snd_timer_query_params, snd_timer_query_params, ALSA_0.9.0)
 
 /**
  * \brief get the timer global status
@@ -429,7 +429,7 @@ int snd_timer_query_status(snd_timer_query_t *timer, snd_timer_gstatus_t *status
   	assert(status);
 	return timer->ops->status(timer, status);
 }
-use_default_symbol_version(__snd_timer_query_status, snd_timer_query_status, ALSA_0.9.0);
+use_default_symbol_version(__snd_timer_query_status, snd_timer_query_status, ALSA_0.9.0)
 
 /**
  * \brief get size of the snd_timer_id_t structure in bytes
diff --git a/src/timer/timer_query_hw.c b/src/timer/timer_query_hw.c
index d8bac6e7..8c464fc3 100644
--- a/src/timer/timer_query_hw.c
+++ b/src/timer/timer_query_hw.c
@@ -135,4 +135,4 @@ int _snd_timer_query_hw_open(snd_timer_query_t **timer, char *name,
 	}
 	return snd_timer_query_hw_open(timer, name, mode);
 }
-SND_DLSYM_BUILD_VERSION(_snd_timer_query_hw_open, SND_TIMER_QUERY_DLSYM_VERSION);
+SND_DLSYM_BUILD_VERSION(_snd_timer_query_hw_open, SND_TIMER_QUERY_DLSYM_VERSION)
-- 
2.44.0

