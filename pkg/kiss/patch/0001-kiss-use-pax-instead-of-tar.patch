From 48809e7da348bb5baf8eff057cbba6a7023240f8 Mon Sep 17 00:00:00 2001
From: hovercats <hovercatswithlasereyes@protonmail.com>
Date: Sat, 30 Dec 2023 12:15:45 +0100
Subject: [PATCH] kiss: use pax instead of tar

---
 kiss | 58 ++++------------------------------------------------------
 1 file changed, 4 insertions(+), 54 deletions(-)

diff --git a/kiss b/kiss
index 0fa8e9f..1a70e10 100755
--- a/kiss
+++ b/kiss
@@ -505,57 +505,6 @@ pkg_source_git() {
     git reset --hard FETCH_HEAD
 }
 
-pkg_source_tar() {
-    # This is a portable shell implementation of GNU tar's
-    # '--strip-components 1'. Use of this function denotes a
-    # performance penalty.
-    tmp_file "$repo_name" tarball
-    tmp_file "$repo_name" tarball-manifest
-
-    decompress "$1" > "$_tmp_file_pre" ||
-        die "$repo_name" "Failed to decompress $1"
-
-    tar xf "$_tmp_file_pre" ||
-        die "$repo_name" "Failed to extract $1"
-
-    # The sort command filters out all duplicate top-level
-    # directories from the tarball's manifest. This is an optimization
-    # as we avoid looping (4000 times for Python(!)).
-    tar tf "$_tmp_file_pre" | sort -ut / -k1,1 > "$_tmp_file" ||
-        die "$repo_name" "Failed to extract manifest"
-
-    # Iterate over all directories in the first level of the
-    # tarball's manifest. Each directory is moved up a level.
-    while IFS=/ read -r dir _; do case ${dir#.} in *?*)
-        # Skip entries which aren't directories.
-        [ -d "$dir" ] || continue
-
-        # Move the parent directory to prevent naming conflicts
-        # with the to-be-moved children.
-        mv -f "$dir" "$KISS_PID-$dir"
-
-        # Move all children up a directory level. If the mv command
-        # fails, fallback to copying the remainder of the files.
-        #
-        # We can't use '-exec {} +' with any arguments between
-        # the '{}' and '+' as this is not POSIX. We must also
-        # use '$0' and '$@' to reference all arguments.
-        find "$KISS_PID-$dir/." ! -name . -prune \
-            -exec sh -c 'mv -f "$0" "$@" .' {} + 2>/dev/null ||
-
-        find "$KISS_PID-$dir/." ! -name . -prune \
-            -exec sh -c 'cp -fRPp "$0" "$@" .' {} +
-
-        # Remove the directory now that all files have been
-        # transferred out of it. This can't be a simple 'rmdir'
-        # as we may leave files in here if any were copied.
-        rm -rf "$KISS_PID-$dir"
-    esac done < "$_tmp_file"
-
-    # Remove the tarball now that we are done with it.
-    rm -f "$_tmp_file_pre"
-}
-
 pkg_extract() {
     # Extract all source archives to the build directory and copy over any
     # local repository files.
@@ -580,7 +529,8 @@ pkg_extract() {
             ;;
 
             *.tar|*.tar.??|*.tar.???|*.tar.????|*.t?z)
-                pkg_source_tar "$_res"
+            decompress "$_res" | pax -r -s '!^[^/]*/!!'
+
             ;;
 
             *?*)
@@ -964,7 +914,7 @@ pkg_tar() {
     cd "$pkg_dir/$1"
 
     # Create a tarball from the contents of the built package.
-    tar cf - . | compress > "$_tar_file"
+    pax -w . | compress > "$_tar_file"
 
     cd "$OLDPWD"
 
@@ -1650,7 +1600,7 @@ pkg_install() {
     # then "installed" to the filesystem. Running this step as soon as possible
     # allows us to also check the validity of the tarball and bail out early
     # if needed.
-    decompress "$tar_file" | tar xf -
+    decompress "$tar_file" | pax -r
 
     # Naively assume that the existence of a manifest file is all that
     # determines a valid KISS package from an invalid one. This should be a
-- 
2.43.0

